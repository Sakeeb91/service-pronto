// Prisma schema for Service Pronto Retail MVP

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String
  address   String?
  zones     Zone[]
  locations Location[]
  staff     Staff[]
}

model Zone {
  id        Int      @id @default(autoincrement())
  name      String
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   Int
  locations Location[]
  staffZones StaffZone[]
}

model Location {
  id          Int      @id @default(autoincrement())
  description String
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     Int
  zone        Zone     @relation(fields: [zoneId], references: [id])
  zoneId      Int
  qrCode      String   @unique
  requests    Request[]
}

model Staff {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   Int
  staffZones StaffZone[]
  requests  Request[]
  isAdmin   Boolean  @default(false)
}

model StaffZone {
  staff   Staff @relation(fields: [staffId], references: [id])
  staffId Int
  zone    Zone  @relation(fields: [zoneId], references: [id])
  zoneId  Int

  @@id([staffId, zoneId])
}

model Request {
  id              Int      @id @default(autoincrement())
  location        Location @relation(fields: [locationId], references: [id])
  locationId      Int
  deviceId        String
  createdAt       DateTime @default(now())
  status          RequestStatus
  acknowledgedAt  DateTime?
  resolvedAt      DateTime?
  staff           Staff?   @relation(fields: [staffId], references: [id])
  staffId         Int?
}

enum RequestStatus {
  PENDING
  ACKNOWLEDGED
  RESOLVED
  CANCELLED
}
